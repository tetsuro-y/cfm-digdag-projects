BEGIN;

CREATE TEMP TABLE TAT_DB_HISTORY_PUSH_USER_TEMP
(
    OSID BYTEINT,
    FULLVISITORID VARCHAR(30)
)
DISTRIBUTE ON (OSID, FULLVISITORID);

INSERT INTO TAT_DB_HISTORY_PUSH_USER_TEMP
SELECT
    OSID
    ,FULLVISITORID
FROM
    EXTERNAL '${embulk.file_path}/${embulk.out_file}'
USING (DELIM ',' REMOTESOURCE 'JDBC' LOGDIR '/tmp/embulk/puredata/log');

DELETE FROM TAT_DB_HISTORY_PUSH_USER
WHERE
    (HPU_DATE >= CURRENT_DATE AND HPU_DATE < CURRENT_DATE + INTERVAL '1DAY')
    OR HPU_DATE < DATE_TRUNC('MONTH', CURRENT_DATE + INTERVAL '-25MONTHS')::DATE;

INSERT INTO TAT_DB_HISTORY_PUSH_USER
SELECT
    VM_DATE AS HPU_DATE
    ,VM_OSID AS HPU_OSID
    ,VM_VALIDUSERCNT_PERSONAL AS HPU_VALIDUSERCNT_PERSONAL
    ,VM_VALIDUSERCNT_NEWARRIVAL_ONETIME AS HPU_VALIDUSERCNT_NEWARRIVAL_ONETIME
    ,VM_VALIDUSERCNT_NEWARRIVAL_REALTIME AS HPU_VALIDUSERCNT_NEWARRIVAL_REALTIME
    ,VM_VALIDUSERCNT_MASS AS HPU_VALIDUSERCNT_MASS
    ,AM_ACTIVEUSERCNT AS HPU_ACTIVEUSERCNT
FROM (
    SELECT
        CURRENT_DATE AS VM_DATE
        ,UU_TYPEID AS VM_OSID
        ,COUNT(DISTINCT CASE WHEN PNSPUSHTYPECATEGORYID = 1 THEN UU_MEMBERID ELSE NULL END) AS VM_VALIDUSERCNT_PERSONAL
        ,COUNT(DISTINCT CASE WHEN PNSPUSHTYPECATEGORYID = 2 THEN UU_MEMBERID ELSE NULL END) AS VM_VALIDUSERCNT_NEWARRIVAL_ONETIME
        ,COUNT(DISTINCT CASE WHEN PNSPUSHTYPECATEGORYID = 5 THEN UU_MEMBERID ELSE NULL END) AS VM_VALIDUSERCNT_NEWARRIVAL_REALTIME
        ,COUNT(DISTINCT CASE WHEN PNSPUSHTYPECATEGORYID = 6 THEN UU_MEMBERID ELSE NULL END) AS VM_VALIDUSERCNT_MASS
    FROM (
        SELECT
            PB_MEMBERID AS UU_MEMBERID
            ,PB_UID AS UU_UID
            ,PB_TYPEID AS UU_TYPEID
        FROM (
            SELECT
                PNMEMBERID AS PB_MEMBERID
                ,PNUID AS PB_UID
                ,PNDEVICETYPEID AS PB_TYPEID
                ,ROW_NUMBER() OVER (PARTITION BY PNMEMBERID ORDER BY PNMODIFYDT DESC) AS PB_NUMBER
            FROM
                TPUSHNOTIFICATION
            WHERE
                PNMEMBERID IS NOT NULL
                AND PNMODIFYDT < CURRENT_DATE::TIMESTAMP
        ) AS PUSHBASE/*PRFIX = PB*/
        WHERE
            PB_NUMBER = 1--最新のMODIFYDTのレコードを正とする
    ) AS UNIQUEUID/*PREFIX = UU*/
    INNER JOIN TPUSHNOTIFICATIONSETTING ON UU_UID = PNSUID
    WHERE
        PNSPUSHTYPECATEGORYID IN (1, 2, 5, 6)
        AND PNSDELETEFLAG = 0
    GROUP BY
        VM_OSID
) AS VALIDMEMBER /*PREFIX = VM*/
LEFT OUTER JOIN (
    SELECT
        CURRENT_DATE AS AM_DATE
        ,OSID AS AM_OSID
        ,COUNT(DISTINCT FULLVISITORID) AS AM_ACTIVEUSERCNT
    FROM
        TAT_DB_HISTORY_PUSH_USER_TEMP
    GROUP BY
        AM_OSID
) AS ACTIVEMEMBER /*PREFIX = AM*/ ON VM_DATE = AM_DATE AND VM_OSID = AM_OSID;

COMMIT;