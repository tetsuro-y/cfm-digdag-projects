BEGIN;

--UU
CREATE TEMP TABLE TAT_SITE_ACCESSDATA_PRICETYPE_ACCESS_TEMP (
    SAPR_MONTH DATE,
    SAPR_DEVICEID BYTEINT,
    SAPR_PRICETYPEID BYTEINT,
    SAPR_CNT_USER INTEGER
) DISTRIBUTE ON (SAPR_MONTH, SAPR_DEVICEID, SAPR_PRICETYPEID)
;

--売上
CREATE TEMP TABLE TAT_SITE_ACCESSDATA_PRICETYPE_PRICE_TEMP (
    SAPR_MONTH DATE,
    SAPR_DEVICEID BYTEINT,
    SAPR_PRICETYPEID BYTEINT,
    SAPR_SALES BIGINT
) DISTRIBUTE ON (SAPR_MONTH, SAPR_DEVICEID, SAPR_PRICETYPEID)
;

INSERT INTO TAT_SITE_ACCESSDATA_PRICETYPE_ACCESS_TEMP
SELECT
    SAPR_MONTH,
    SAPR_DEVICEID,
    SAPR_PRICETYPEID,
    SAPR_CNT_USER
FROM
	EXTERNAL '${embulk.file_path}/${embulk.out_file}'
USING (DELIM ',' REMOTESOURCE 'JDBC' LOGDIR '/tmp/embulk/puredata/log' MAXERRORS 0)
;

INSERT INTO TAT_SITE_ACCESSDATA_PRICETYPE_PRICE_TEMP
SELECT
    DATE_TRUNC('MONTH', ORORDERDT) AS SAPR_MONTH
    ,CASE
        WHEN OISITEID = 1
                AND OIUID NOT LIKE 'S6%'
                AND OIUID NOT LIKE 'S9%'
            THEN 1
        WHEN OISITEID IN (2, 3, 4)
                AND OIUID NOT LIKE 'S6%'
                AND OIUID NOT LIKE 'S9%'
            THEN 2
        WHEN (OIUID LIKE 'S6%' OR OIUID LIKE 'S9%')
            THEN 3
    END AS SAPR_DEVICEID
    ,CASE
        WHEN ODPRICETYPE = 1 THEN 1--プロパー
        WHEN ODPRICETYPE IN (2, 4) THEN 2--セール
    END AS SAPR_PRICETYPEID
    ,SUM(ODPRICE * ODQUANTITY) AS SAPR_SALES
FROM (
    SELECT
        ORORDERDT
        ,ODPRICE
        ,ODQUANTITY
        ,ODPRICETYPE
        ,OISITEID
        ,OIUID
    FROM
        TORDER
        INNER JOIN TORDERDETAIL ON ORORDERID = ODORDERID
        INNER JOIN TORDERINFO ON ORORDERID = OIORDERID
    WHERE
        ORORDERDT >= DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL'-1MONTH'
        AND ORORDERDT < DATE_TRUNC('MONTH', CURRENT_DATE)
        AND ORMALLID = 1
        AND ORORDERID = ORORIGINALORDERID --発送後キャンセルを考慮しない。上記ORORDERSTATUSの-1除外だけでは発送後キャンセルが含まれるためこの指定が必要
        AND ORPAYMENTTYPEID <> 13 --定期便の注文を除外
        --タイツ0円購入を除外
        AND NOT EXISTS (
            SELECT
                *
            FROM
                TORDERDETAILDISCOUNT--TORDERDETAILDISCOUNTのDISCOUNTTYPEIDでタイツ0円購入を指定できる・ORDISCOUNTだとのちのちお気に入り割引など入ってくるのでこっちが確実
            WHERE
                ODORDERDETAILID = ODDORDERDETAILID
                AND ODDDISCOUNTTYPEID = 2 --1:お気に入り値引き/2:初回タイツ無料/22022:シングル（靴擦れ可）/22023:ダブル（靴擦れ可）/22024:シングル（靴擦れ不可）/22026:ダブル（靴擦れ不可）/22028:タタキ（靴擦れ不可）/22029:裾上げ未指定
        )
        AND ORMEMBERID <> 4388014--ゲスト以外
        AND
        (
            (OISITEID IN (1,2,3,4) AND OIUID NOT LIKE 'S6%' AND OIUID NOT LIKE 'S9%')--PC/SP
            OR
            (OIUID LIKE 'S6%' OR OIUID LIKE 'S9%')--APP
        )

        UNION ALL

        --ゲスト
         SELECT
            ORORDERDT
            ,ODPRICE
            ,ODQUANTITY
            ,ODPRICETYPE
            ,OOTSITEID AS OISITEID
            ,OOTUID AS OIUID
        FROM
            TORDER
            INNER JOIN TORDERDETAIL ON ORORDERID = ODORDERID
            INNER JOIN TORDERONETIMEINFO ON ORORDERID = OOTORDERID
        WHERE
            ORORDERDT >= DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL'-1MONTH'
            AND ORORDERDT < DATE_TRUNC('MONTH', CURRENT_DATE)
            AND ORMALLID = 1
            AND ORORDERID = ORORIGINALORDERID --発送後キャンセルを考慮しない。上記ORORDERSTATUSの-1除外だけでは発送後キャンセルが含まれるためこの指定が必要
            AND ORPAYMENTTYPEID <> 13 --定期便の注文を除外
            --タイツ0円購入を除外
            AND NOT EXISTS (
                SELECT
                    *
                FROM
                    TORDERDETAILDISCOUNT--TORDERDETAILDISCOUNTのDISCOUNTTYPEIDでタイツ0円購入を指定できる・ORDISCOUNTだとのちのちお気に入り割引など入ってくるのでこっちが確実
                WHERE
                    ODORDERDETAILID = ODDORDERDETAILID
                    AND ODDDISCOUNTTYPEID = 2 --1:お気に入り値引き/2:初回タイツ無料/22022:シングル（靴擦れ可）/22023:ダブル（靴擦れ可）/22024:シングル（靴擦れ不可）/22026:ダブル（靴擦れ不可）/22028:タタキ（靴擦れ不可）/22029:裾上げ未指定
            )
            AND ORMEMBERID = 4388014--ゲスト
            AND
            (
                (OOTSITEID IN (1,2,3,4) AND OOTUID NOT LIKE 'S6%' AND OOTUID NOT LIKE 'S9%')--PC/SP
                OR
                (OOTUID LIKE 'S6%' OR OOTUID LIKE 'S9%')--APP
            )
) AS UNIONDATA
GROUP BY
    SAPR_MONTH
    ,SAPR_DEVICEID
    ,SAPR_PRICETYPEID
;

DELETE
FROM
    TAT_SITE_ACCESSDATA_PRICETYPE
WHERE
    SAPR_MONTH < DATE_TRUNC('MONTH', CURRENT_DATE + INTERVAL '-2YEARS')::TIMESTAMP
    OR SAPR_MONTH >= DATE_TRUNC('MONTH', CURRENT_DATE + INTERVAL '-1MONTH')::TIMESTAMP
;

INSERT INTO TAT_SITE_ACCESSDATA_PRICETYPE
SELECT
    SAPR_MONTH
    ,SAPR_DEVICEID
    ,SAPR_PRICETYPEID
    ,MAX(SAPR_CNT_USER) AS SAPR_CNT_USER
    ,MAX(SAPR_SALES) AS SAPR_SALES
FROM (
    SELECT
        SAPR_MONTH
        ,SAPR_DEVICEID
        ,SAPR_PRICETYPEID
        ,SAPR_CNT_USER
        ,NULL AS SAPR_SALES
    FROM
        TAT_SITE_ACCESSDATA_PRICETYPE_ACCESS_TEMP

    UNION ALL

    SELECT
        SAPR_MONTH
        ,SAPR_DEVICEID
        ,SAPR_PRICETYPEID
        ,NULL AS SAPR_CNT_USER
        ,SAPR_SALES
    FROM
        TAT_SITE_ACCESSDATA_PRICETYPE_PRICE_TEMP
) AS GETUNIONDATA
GROUP BY
    SAPR_MONTH
    ,SAPR_DEVICEID
    ,SAPR_PRICETYPEID
;

COMMIT
;